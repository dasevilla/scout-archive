name: Requirements archiver

on:
  schedule:
    # Run weekly on Sunday at 2 AM Pacific Time (9 AM UTC)
    - cron: "0 9 * * 0"
  workflow_dispatch: # Allow manual triggering
    inputs:
      force_release:
        description: "Force release creation even if no changes detected"
        required: false
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  archive:
    runs-on: ubuntu-latest
    outputs:
      has-changes: ${{ steps.commit-changes.outputs.has-changes }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1 # Only fetch the latest commit to compare changes

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.11"
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Run archive process
        run: make archive archive-cub-adventures -j2

      - name: Build the index
        run: make index index-cub-adventures

      - name: Validate archives
        run: make validate validate-cub-adventures

      - name: Generate change reports
        run: make report report-cub-adventures

      - name: Upload change reports
        uses: actions/upload-artifact@v4
        with:
          name: change-reports
          path: |
            change-report.txt
            cub-adventures-change-report.txt
          retention-days: 7
          if-no-files-found: warn

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: |
            run.log
            run-cub-adventures.log
          retention-days: 7
          if-no-files-found: warn

      - name: Upload merit badge markdown files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: merit-badge-markdown
          path: |
            build/merit-badges/*.md
            build/merit-badges/images
          retention-days: 7
          if-no-files-found: warn

      - name: Upload cub adventures markdown files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cub-adventure-markdown
          path: |
            build/cub-scout-adventures/*/*.md
            build/cub-scout-adventures/index.md
            build/cub-scout-adventures/*/images
          retention-days: 7
          if-no-files-found: warn

      - name: Upload merit badge JSON files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: merit-badge-json
          path: |
            build/merit-badges/*.json
            build/merit-badges/images
          retention-days: 7
          if-no-files-found: warn

      - name: Upload cub adventure JSON files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cub-adventure-json
          path: |
            build/cub-scout-adventures/*/*.json
            build/cub-scout-adventures/*/images
          retention-days: 7
          if-no-files-found: warn

      - name: Create job summary
        run: |
          if [ -f change-report.txt ]; then
            echo "### Merit Badge Change Report" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            cat change-report.txt >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          if [ -f cub-adventures-change-report.txt ]; then
            echo "### Cub Adventures Change Report" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            cat cub-adventures-change-report.txt >> $GITHUB_STEP_SUMMARY
          fi

      - name: Check for changes and commit
        id: commit-changes
        run: |
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Add files to the commit
          git add build/merit-badges/*.json build/merit-badges/images/* build/cub-scout-adventures/*/*.json build/cub-scout-adventures/*/images/* build/cub-scout-adventures/index.md

          # Check if there are changes
          if git diff --staged --quiet; then
            echo "No changes detected"
            echo "has-changes=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "has-changes=true" >> $GITHUB_OUTPUT

          # Create commit with a detailed message
          git commit -F- <<EOF
          Update archive ($(date +"%Y-%m-%d"))

          Merit Badge Changes:
          $(cat change-report.txt)

          Cub Adventures Changes:
          $(cat cub-adventures-change-report.txt)

          Automated archive via GitHub Actions
          EOF

      - name: Push changes
        if: steps.commit-changes.outputs.has-changes == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Check for failures
        if: failure()
        run: |
          echo "::error::Archiving job failed! This could indicate a change in the source website structure or validation failed."

  create-release:
    runs-on: ubuntu-latest
    needs: archive
    if: needs.archive.outputs.has-changes == 'true' || inputs.force_release == true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts for release
        uses: actions/download-artifact@v4
        with:
          path: release-assets

      - name: Validate artifacts and create archives
        run: |
          # Validate required artifacts exist
          if [ ! -d "release-assets/merit-badge-json" ] || [ ! -d "release-assets/merit-badge-markdown" ]; then
            echo "::error::Required merit badge artifacts not found"
            exit 1
          fi

          cd release-assets

          # Create merit badge archives
          tar -czf ../merit-badge-json.tar.gz -C merit-badge-json .
          tar -czf ../merit-badge-markdown.tar.gz -C merit-badge-markdown .

          # Handle merit badge images
          if [ -d "merit-badge-markdown/images" ]; then
            tar -czf ../merit-badge-images.tar.gz -C merit-badge-markdown images
          else
            tar -czf ../merit-badge-images.tar.gz --files-from /dev/null
          fi

          # Create cub adventure archives if they exist
          tar -czf ../cub-adventure-json.tar.gz -C cub-adventure-json .
          tar -czf ../cub-adventure-markdown.tar.gz -C cub-adventure-markdown .

          # Create combined archives
          mkdir -p combined-json combined-markdown combined-images

          # Combine all JSON files with subdirs
          mkdir -p combined-json/merit-badge combined-json/cub-adventure
          cp -r merit-badge-json/* combined-json/merit-badge/ 2>/dev/null || true
          cp -r cub-adventure-json/* combined-json/cub-adventure/ 2>/dev/null || true
          tar -czf ../scout-archive-json.tar.gz -C combined-json .

          # Combine all markdown files with subdirs
          mkdir -p combined-markdown/merit-badge combined-markdown/cub-adventure
          cp -r merit-badge-markdown/* combined-markdown/merit-badge/ 2>/dev/null || true
          cp -r cub-adventure-markdown/* combined-markdown/cub-adventure/ 2>/dev/null || true
          tar -czf ../scout-archive-markdown.tar.gz -C combined-markdown .

      - name: Get release info
        id: release-info
        run: uv run src/scripts/get-release-info.py $GITHUB_OUTPUT --run-number $GITHUB_RUN_NUMBER --run-attempt $GITHUB_RUN_ATTEMPT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release-info.outputs.release-tag }}
          name: ${{ steps.release-info.outputs.release-name }}
          body: |
            ${{ steps.release-info.outputs.change-report }}
          files: |
            merit-badge-json.tar.gz
            merit-badge-markdown.tar.gz
            merit-badge-images.tar.gz
            cub-adventure-json.tar.gz
            cub-adventure-markdown.tar.gz
            scout-archive-json.tar.gz
            scout-archive-markdown.tar.gz
          draft: false
          prerelease: false

  deploy-site:
    runs-on: ubuntu-latest
    needs: archive

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.11"
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Download merit badge artifacts
        uses: actions/download-artifact@v4
        with:
          name: merit-badge-json
          path: build/merit-badges

      - name: Download merit badge markdown artifacts
        uses: actions/download-artifact@v4
        with:
          name: merit-badge-markdown
          path: build/merit-badges

      - name: Download cub adventure artifacts
        uses: actions/download-artifact@v4
        with:
          name: cub-adventure-json
          path: build/cub-scout-adventures

      - name: Download cub adventure markdown artifacts
        uses: actions/download-artifact@v4
        with:
          name: cub-adventure-markdown
          path: build/cub-scout-adventures

      - name: Build website
        run: make build-website

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: _site # The folder the action should deploy
          branch: gh-pages # The branch the action should deploy to
